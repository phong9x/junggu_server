/*
 * Created on 20 Jan 2016 ( Time 09:12:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.junggu.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "category"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="category", catalog="junggutwo" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CategoryEntity.countAll", query="SELECT COUNT(x) FROM CategoryEntity x" )
} )
public class CategoryEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="_id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="PARENT_ID", nullable=false)
    private Integer    parentId     ;

    @Column(name="CAT_NAME", nullable=false, length=255)
    private String     catName      ;

    @Column(name="CAT_NAME_ADMIN", length=255)
    private String     catNameAdmin ;

    @Column(name="IMAGE", length=500)
    private String     image        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE")
    private Date       updateDate   ;

    @Column(name="IS_DELETE")
    private Integer    isDelete     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CategoryEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : PARENT_ID ( INT ) 
    public void setParentId( Integer parentId ) {
        this.parentId = parentId;
    }
    public Integer getParentId() {
        return this.parentId;
    }

    //--- DATABASE MAPPING : CAT_NAME ( VARCHAR ) 
    public void setCatName( String catName ) {
        this.catName = catName;
    }
    public String getCatName() {
        return this.catName;
    }

    //--- DATABASE MAPPING : CAT_NAME_ADMIN ( VARCHAR ) 
    public void setCatNameAdmin( String catNameAdmin ) {
        this.catNameAdmin = catNameAdmin;
    }
    public String getCatNameAdmin() {
        return this.catNameAdmin;
    }

    //--- DATABASE MAPPING : IMAGE ( VARCHAR ) 
    public void setImage( String image ) {
        this.image = image;
    }
    public String getImage() {
        return this.image;
    }

    //--- DATABASE MAPPING : CREATE_DATE ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : UPDATE_DATE ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : IS_DELETE ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(parentId);
        sb.append("|");
        sb.append(catName);
        sb.append("|");
        sb.append(catNameAdmin);
        sb.append("|");
        sb.append(image);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(isDelete);
        return sb.toString(); 
    } 

}
