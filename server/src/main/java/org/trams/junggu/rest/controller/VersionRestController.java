/*
 * Created on 29 Oct 2015 ( Time 14:20:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.junggu.rest.controller;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.annotation.Resource;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.trams.junggu.bean.Version;
import org.trams.junggu.business.service.VersionService;

/**
 * Spring MVC controller for 'Version' management.
 */
@Controller
public class VersionRestController {

	@Resource
	private VersionService versionService;
	
//	@RequestMapping( value="/items/version",
//			method = RequestMethod.GET,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public List<VersionListItem> findAllAsListItems() {
//		List<Version> list = versionService.findAll();
//		List<VersionListItem> items = new LinkedList<VersionListItem>();
//		for ( Version version : list ) {
//			items.add(new VersionListItem( version ) );
//		}
//		return items;
//	}
	
	@RequestMapping( value="/items/version",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Version> findAllAsListItems(@RequestBody String json) {
		List<Version> list = new ArrayList<>();
		try {
			JSONParser parser = new JSONParser();
			JSONObject jsonObj = (JSONObject) parser.parse(json);
			Long updateDate = org.trams.junggu.web.common.Utils.parseLong(jsonObj.get("updateDate"));
			
			Date dateUpdate = new Date(updateDate);
			
			list = versionService.findAllUpdate(dateUpdate);
		} catch (Exception e) {
		}
		
		return list;
	}
	
//	@RequestMapping( value="/version",
//			method = RequestMethod.GET,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public List<Version> findAll() {
//		return versionService.findAll();
//	}
//
//	@RequestMapping( value="/version/{id}",
//			method = RequestMethod.GET,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public Version findOne(@PathVariable("id") Integer id) {
//		return versionService.findById(id);
//	}
//	
//	@RequestMapping( value="/version",
//			method = RequestMethod.POST,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public Version create(@RequestBody Version version) {
//		return versionService.create(version);
//	}
//
//	@RequestMapping( value="/version/{id}",
//			method = RequestMethod.PUT,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public Version update(@PathVariable("id") Integer id, @RequestBody Version version) {
//		return versionService.update(version);
//	}
//
//	@RequestMapping( value="/version/{id}",
//			method = RequestMethod.DELETE,
//			produces = MediaType.APPLICATION_JSON_VALUE)
//    @ResponseStatus(HttpStatus.OK)
//	@ResponseBody
//	public void delete(@PathVariable("id") Integer id) {
//		versionService.delete(id);
//	}
	
}
