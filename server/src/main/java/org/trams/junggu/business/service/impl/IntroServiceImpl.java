/*
 * Created on 9 Nov 2015 ( Time 15:25:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.junggu.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.trams.junggu.bean.Intro;
import org.trams.junggu.bean.jpa.IntroEntity;
import java.util.Date;
import org.trams.junggu.business.service.IntroService;
import org.trams.junggu.business.service.mapping.IntroServiceMapper;
import org.trams.junggu.data.repository.jpa.IntroJpaRepository;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.data.domain.Sort.Order;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of IntroService
 */
@Component
@Transactional
public class IntroServiceImpl implements IntroService {

	@Resource
	private IntroJpaRepository introJpaRepository;

	private static final Integer PAGE_SIZE   = 15;

	@Resource
	private IntroServiceMapper introServiceMapper;
	
	@Override
	public Intro findById(Integer id) {
		IntroEntity introEntity = introJpaRepository.findOne(id);
		return introServiceMapper.mapIntroEntityToIntro(introEntity);
	}

	@Override
	public Page<IntroEntity> findAll(Integer pageNumber) {

		PageRequest request = new PageRequest(pageNumber - 1, PAGE_SIZE,
				new Sort(new Order(Direction.DESC, "id")));
		return introJpaRepository.findAll(request);
	}

	@Override
	public List<Intro> findAll() {
		Iterable<IntroEntity> entities = introJpaRepository.findAll();
		List<Intro> beans = new ArrayList<Intro>();
		for(IntroEntity introEntity : entities) {
			beans.add(introServiceMapper.mapIntroEntityToIntro(introEntity));
		}
		return beans;
	}

	/**
	 * Count total entit
	 * @return Long
	 */
	public Long countTotal(){
		Long count = introJpaRepository.count();
		return count;
	}

	@Override
	public Intro save(Intro intro) {
		return update(intro) ;
	}

	@Override
	public Intro create(Intro intro) {
/*
		IntroEntity introEntity = introJpaRepository.findOne(intro.getId());
		if( introEntity != null ) {
			throw new IllegalStateException("already.exists");
		}

		introEntity = new IntroEntity();
		introServiceMapper.mapIntroToIntroEntity(intro, introEntity);
		IntroEntity introEntitySaved = introJpaRepository.save(introEntity);
		return introServiceMapper.mapIntroEntityToIntro(introEntitySaved);
*/
		IntroEntity introEntity = new IntroEntity();
		introServiceMapper.mapIntroToIntroEntity(intro, introEntity);
		IntroEntity introEntitySaved = introJpaRepository.save(introEntity);
		return introServiceMapper.mapIntroEntityToIntro(introEntitySaved);
	}

	@Override
	public Intro update(Intro intro) {
		IntroEntity introEntity = introJpaRepository.findOne(intro.getId());
		introServiceMapper.mapIntroToIntroEntity(intro, introEntity);
		IntroEntity introEntitySaved = introJpaRepository.save(introEntity);
		return introServiceMapper.mapIntroEntityToIntro(introEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		introJpaRepository.delete(id);
	}

	public IntroJpaRepository getIntroJpaRepository() {
		return introJpaRepository;
	}

	public void setIntroJpaRepository(IntroJpaRepository introJpaRepository) {
		this.introJpaRepository = introJpaRepository;
	}

	public IntroServiceMapper getIntroServiceMapper() {
		return introServiceMapper;
	}

	public void setIntroServiceMapper(IntroServiceMapper introServiceMapper) {
		this.introServiceMapper = introServiceMapper;
	}

	@Override
	public void deleteAll() {
		try {
			introJpaRepository.deleteAll();
		} catch (Exception e) {
			System.out.println(e);
		}
		
	}

}
