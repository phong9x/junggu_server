/*
 * Created on 29 Oct 2015 ( Time 14:20:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.junggu.web.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.junggu.web.common.AbstractController;
import org.trams.junggu.web.common.FormMode;
import org.trams.junggu.web.common.Pager;
import org.trams.junggu.web.common.Login;
import org.trams.junggu.web.common.Message;
import org.trams.junggu.web.common.MessageType;
import org.trams.junggu.bean.jpa.NoticeEntity;
import org.trams.junggu.bean.jpa.UserEntity;
//--- Entities
import org.trams.junggu.bean.Notice;

//--- Services 
import org.trams.junggu.business.service.NoticeService;
import org.trams.junggu.rest.item.UserItem;


/**
 * Spring MVC controller for 'Notice' management.
 */
@Controller
@RequestMapping("/notice")
public class NoticeController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "notice";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = "pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "notice";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_FORM   = "notice/form";
	private static final String JSP_LIST   = "notice/list";
	private static final String JSP_PAGING   = "notice";
	private static final String JSP_DETAIL   = "notice/detail";
	private static final String JSP_CREATE   = "notice/create";
	private static final String JSP_LOGIN   = "login";

	//--- SAVE ACTION ( in the HTML form )
	private static final String SAVE_ACTION_CREATE   = "/notice/create";
	private static final String SAVE_ACTION_UPDATE   = "/notice/update";

	//--- Main entity service
	@Resource
    private NoticeService noticeService; // Injected by Spring
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public NoticeController() {
		super(NoticeController.class, MAIN_ENTITY_NAME );
		log("NoticeController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page, 
			@RequestParam(value="delete",defaultValue="0") Integer delete, 
			HttpSession session,
			Model model) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		if(delete>0){
			try {
				Notice notice=noticeService.findById(delete);
				notice.setIsDelete(1);
				notice.setUpdateDate(new Date());
				noticeService.update(notice);
			} catch (Exception e) {
				// TODO: handle exception
			}
			
		}
		Page<NoticeEntity> listPage=noticeService.listPaging(page, PAGE_SIZE);
		model.addAttribute("activePage", nav);
		//model.addAttribute("pagination_navigator", "/notice/list");
		new Pager<NoticeEntity>(listPage).setSetting(model, "");	
		return JSP_LIST;
	}

	@RequestMapping("/create")
	public String create(
			@RequestParam(value="title",defaultValue="") String title,
			@RequestParam(value="content",defaultValue="") String content, 
			@RequestParam(value="create",defaultValue="0") Integer create,
			HttpSession session,
			Model model) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		if(create>0){
			try{
				if(title!="" && content!=""){
					
				UserItem user = Login.getUserLogined(session);
				Notice notice= new Notice();
				notice.setContent(content);
				notice.setTitle(title);
				notice.setUpdateDate(new Date());
				notice.setCreateDate(new Date());
				notice.setUserId(user.getId());
				notice.setNoticeType(1);
				notice.setIsDelete(0);
				noticeService.create(notice);
				return "redirect:/notice/list";
				}
			}catch(Exception e){
				System.out.println(e);
				
			}
		}
		
		return JSP_CREATE;
	}

	@RequestMapping("/detail/{id}")
	public String detail(Model model, 
			@RequestParam(value="title",defaultValue="") String title,
			@RequestParam(value="content",defaultValue="") String content,
			@RequestParam(value="edit",defaultValue="0") Integer edit,
			HttpSession session,
			@PathVariable("id") Integer id) {
		Notice notice = noticeService.findById(id);
		if(edit>0 && title!=""){
			notice.setContent(content);
			notice.setTitle(title);
			notice.setUserId(Login.getUserLogined(session).getId());
			notice.setUpdateDate(new Date());
			noticeService.update(notice);
		}
		model.addAttribute("activePage", nav);
		model.addAttribute("notice", notice);
		return JSP_DETAIL;
	}
	
}
