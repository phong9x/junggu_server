/*
 * Created on 29 Oct 2015 ( Time 14:20:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.junggu.web.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.junggu.web.common.AbstractController;
import org.trams.junggu.web.common.FormMode;
import org.trams.junggu.web.common.Pager;
import org.trams.junggu.web.common.Utils;
import org.trams.junggu.web.common.Login;
import org.trams.junggu.web.common.Message;
import org.trams.junggu.web.common.MessageType;
import org.trams.junggu.bean.jpa.CategoryEntity;
import org.trams.junggu.bean.jpa.NoticeEntity;
import org.trams.junggu.bean.jpa.ReportEntity;
import org.trams.junggu.bean.jpa.StoreEntity;
import org.trams.junggu.bean.jpa.UserEntity;
import org.trams.junggu.bean.Facility;
import org.trams.junggu.bean.Notice;
import org.trams.junggu.bean.Report;
//--- Entities
import org.trams.junggu.bean.Store;

import org.trams.junggu.business.service.CategoryService;

import org.trams.junggu.business.service.FacilityService;
import org.trams.junggu.business.service.ReportService;
//--- Services 
import org.trams.junggu.business.service.StoreService;


/**
 * Spring MVC controller for 'Store' management.
 */
@Controller
@RequestMapping("/report")
public class ReportController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "report";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = "pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "report";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "report/create";
	private static final String JSP_LIST   = "report/list";
	private static final String JSP_PAGING   = "report";
	private static final String JSP_DETAIL   = "report/detail";
	private static final String JSP_REPORT   = "report/report";
	private static final String JSP_LOGIN   = "login";

	//--- SAVE ACTION ( in the HTML form )
	private static final String SAVE_ACTION_CREATE   = "/report/create";
	private static final String SAVE_ACTION_UPDATE   = "/report/update";

	//--- Main entity service
	@Resource
    private ReportService reportService;
	@Resource
    private CategoryService categoryService; // Injected by Spring
	//--- Other service(s)
	@Resource
    private FacilityService facilityService;
	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public ReportController() {
		super(ReportController.class, MAIN_ENTITY_NAME );
		log("StoreController created.");
	}
	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="delete",defaultValue="0") Integer delete,
			Model model,HttpSession session) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		if(delete>0){
			try {
				Report report=reportService.findById(delete);
				report.setIsDelete(1);
				report.setUpdateDate(new Date());
				reportService.update(report);
			} catch (Exception e) {
				
			}
		}
		Page<ReportEntity> listPage=null;
		listPage=reportService.listPaging(page, PAGE_SIZE);
		for (ReportEntity reportEntity : listPage) {
			if(reportEntity.getPhoneNumber()!=""){
				reportEntity.setPhoneNumber(Utils.formatPhoneNumber(reportEntity.getPhoneNumber()));
			}
		}
		model.addAttribute("pagination_navigator", "/report/list");
		model.addAttribute("activePage", nav);
		new Pager<ReportEntity>(listPage).setSetting(model, "");	
		return JSP_LIST;
	}



}
